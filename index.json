{
  "api/Textify.Accessibility.BrailleBuilder.html": {
    "href": "api/Textify.Accessibility.BrailleBuilder.html",
    "title": "Class BrailleBuilder | Textify API - Aptivi",
    "keywords": "Class BrailleBuilder Braille building tools Inheritance object BrailleBuilder Namespace: Textify.Accessibility Assembly: Textify.dll Syntax public static class BrailleBuilder Methods | Edit this page View Source ToBraille(string) Converts the sentence to Braille Declaration public static string ToBraille(string sentence) Parameters Type Name Description string sentence Sentence to convert Returns Type Description string A Braille representation of the string"
  },
  "api/Textify.Accessibility.BrailleDots.html": {
    "href": "api/Textify.Accessibility.BrailleDots.html",
    "title": "Enum BrailleDots | Textify API - Aptivi",
    "keywords": "Enum BrailleDots Braille dot enumeration Namespace: Textify.Accessibility Assembly: Textify.dll Syntax public enum BrailleDots Fields Name Description Fifth Fifth dot, located in the second column, second row. (⠐) First First dot, located in the first column, first row. (⠁) Fourth Fourth dot, located in the second column, first row. (⠈) None No dot. (⠀) Second Second dot, located in the first column, second row. (⠂) Sixth Sixth dot, located in the second column, third row. (⠠) Third Third dot, located in the first column, third row. (⠄)"
  },
  "api/Textify.Accessibility.html": {
    "href": "api/Textify.Accessibility.html",
    "title": "Namespace Textify.Accessibility | Textify API - Aptivi",
    "keywords": "Namespace Textify.Accessibility Classes BrailleBuilder Braille building tools Enums BrailleDots Braille dot enumeration"
  },
  "api/Textify.Data.Analysis.NameGen.NameGenderType.html": {
    "href": "api/Textify.Data.Analysis.NameGen.NameGenderType.html",
    "title": "Enum NameGenderType | Textify API - Aptivi",
    "keywords": "Enum NameGenderType Name gender type Namespace: Textify.Data.Analysis.NameGen Assembly: Textify.Data.Analysis.dll Syntax public enum NameGenderType Fields Name Description Female Uses the list of female names FemaleImplicit Uses the list of implicit female names Male Uses the list of male names MaleImplicit Uses the list of implicit male names Natural Uses the list of unified natural names Unified Uses the list of both male and female names"
  },
  "api/Textify.Data.Analysis.NameGen.NameGenerator.html": {
    "href": "api/Textify.Data.Analysis.NameGen.NameGenerator.html",
    "title": "Class NameGenerator | Textify API - Aptivi",
    "keywords": "Class NameGenerator Name generator class Inheritance object NameGenerator Namespace: Textify.Data.Analysis.NameGen Assembly: Textify.Data.Analysis.dll Syntax public static class NameGenerator Methods | Edit this page View Source FindFirstNames(string, string, string, NameGenderType) Generates the first names Declaration public static string[] FindFirstNames(string nameSearchTerm, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description string nameSearchTerm Search term for the name string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source FindFirstNames(string, NameGenderType) Generates the first names Declaration public static string[] FindFirstNames(string nameSearchTerm, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description string nameSearchTerm Search term for the name NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source FindFirstNamesAsync(string, string, string, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> FindFirstNamesAsync(string nameSearchTerm, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description string nameSearchTerm Search term for the name string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source FindFirstNamesAsync(string, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> FindFirstNamesAsync(string nameSearchTerm, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description string nameSearchTerm Search term for the name NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source FindLastNames(string) Generates the last names Declaration public static string[] FindLastNames(string nameSearchTerm) Parameters Type Name Description string nameSearchTerm Search term for the name Returns Type Description string[] List of generated names | Edit this page View Source FindLastNames(string, string, string) Generates the last names Declaration public static string[] FindLastNames(string nameSearchTerm, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description string nameSearchTerm Search term for the name string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description string[] List of generated names | Edit this page View Source FindLastNamesAsync(string) [Async] Generates the last names Declaration public static Task<string[]> FindLastNamesAsync(string nameSearchTerm) Parameters Type Name Description string nameSearchTerm Search term for the name Returns Type Description Task<string[]> List of generated names | Edit this page View Source FindLastNamesAsync(string, string, string) [Async] Generates the last names Declaration public static Task<string[]> FindLastNamesAsync(string nameSearchTerm, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description string nameSearchTerm Search term for the name string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateFirstNames(int, string, string, NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(int Count, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNames(int, NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNames(NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNamesAsync(int, string, string, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(int Count, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateFirstNamesAsync(int, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateFirstNamesAsync(NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNames() Generates the last names Declaration public static string[] GenerateLastNames() Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNames(int) Generates the last names Declaration public static string[] GenerateLastNames(int Count) Parameters Type Name Description int Count How many names to generate? Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNames(int, string, string) Generates the last names Declaration public static string[] GenerateLastNames(int Count, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description int Count How many names to generate? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNamesAsync() [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync() Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNamesAsync(int) [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync(int Count) Parameters Type Name Description int Count How many names to generate? Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNamesAsync(int, string, string) [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync(int Count, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description int Count How many names to generate? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNames(int, string, string, string, string, NameGenderType) Generates the names Declaration public static string[] GenerateNames(int Count, string NamePrefix, string NameSuffix, string SurnamePrefix, string SurnameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNames(int, NameGenderType) Generates the names Declaration public static string[] GenerateNames(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNames(NameGenderType) Generates the names Declaration public static string[] GenerateNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNamesAsync(int, string, string, string, string, NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(int Count, string NamePrefix, string NameSuffix, string SurnamePrefix, string SurnameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNamesAsync(int, NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNamesAsync(NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GetAllFirstNames(NameGenderType) Gets all the first names Declaration public static string[] GetAllFirstNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of all the first names | Edit this page View Source GetAllLastNames() Gets all the last names Declaration public static string[] GetAllLastNames() Returns Type Description string[] List of all the last names | Edit this page View Source PopulateNames(NameGenderType) Populates the names and the surnames for the purpose of initialization Declaration public static void PopulateNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names | Edit this page View Source PopulateNamesAsync(NameGenderType) [Async] Populates the names and the surnames for the purpose of initialization Declaration public static Task PopulateNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task"
  },
  "api/Textify.Data.Analysis.NameGen.html": {
    "href": "api/Textify.Data.Analysis.NameGen.html",
    "title": "Namespace Textify.Data.Analysis.NameGen | Textify API - Aptivi",
    "keywords": "Namespace Textify.Data.Analysis.NameGen Classes NameGenerator Name generator class Enums NameGenderType Name gender type"
  },
  "api/Textify.Data.Analysis.Unicode.Char.html": {
    "href": "api/Textify.Data.Analysis.Unicode.Char.html",
    "title": "Class Char | Textify API - Aptivi",
    "keywords": "Class Char Character Inheritance object Char Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public class Char Properties | Edit this page View Source AHex ASCII Hex digit Declaration public string AHex { get; set; } Property Value Type Description string | Edit this page View Source Age The version of Unicode in which a code point was assigned to an abstract character, or made a surrogate or non-character. Declaration public double Age { get; set; } Property Value Type Description double | Edit this page View Source Alpha Alphabetic Declaration public string Alpha { get; set; } Property Value Type Description string | Edit this page View Source Bc Bidirectionality Declaration public string Bc { get; set; } Property Value Type Description string | Edit this page View Source BidiC Bidi Control Declaration public string BidiC { get; set; } Property Value Type Description string | Edit this page View Source BidiM Mirrored (Bidi) Declaration public string BidiM { get; set; } Property Value Type Description string | Edit this page View Source Blk Block Declaration public string Blk { get; set; } Property Value Type Description string | Edit this page View Source Bmg The code point of a character whose glyph is typically a mirrored image of the glyph for the current character. Declaration public string Bmg { get; set; } Property Value Type Description string | Edit this page View Source Bpb Bidi paired bracket Declaration public string Bpb { get; set; } Property Value Type Description string | Edit this page View Source Bpt Bidi paired bracket type Declaration public string Bpt { get; set; } Property Value Type Description string | Edit this page View Source CE Composition Exclusion Declaration public string CE { get; set; } Property Value Type Description string | Edit this page View Source CI Case Ignorable Declaration public string CI { get; set; } Property Value Type Description string | Edit this page View Source CWCF Changes when Casefolded Declaration public string CWCF { get; set; } Property Value Type Description string | Edit this page View Source CWCM Changes when Casemapped Declaration public string CWCM { get; set; } Property Value Type Description string | Edit this page View Source CWKCF Changes when NFKC Casefolded Declaration public string CWKCF { get; set; } Property Value Type Description string | Edit this page View Source CWL Changes when Lowercased Declaration public string CWL { get; set; } Property Value Type Description string | Edit this page View Source CWT Changes when Titlecased Declaration public string CWT { get; set; } Property Value Type Description string | Edit this page View Source CWU Changes when Uppercased Declaration public string CWU { get; set; } Property Value Type Description string | Edit this page View Source Cased Cased Declaration public string Cased { get; set; } Property Value Type Description string | Edit this page View Source Ccc Combining class Declaration public int Ccc { get; set; } Property Value Type Description int | Edit this page View Source Cf Case folding Declaration public string Cf { get; set; } Property Value Type Description string | Edit this page View Source CompEx Full Composition Exclusion Declaration public string CompEx { get; set; } Property Value Type Description string | Edit this page View Source Cp Codepage number Declaration public string Cp { get; set; } Property Value Type Description string | Edit this page View Source DI Default Ignorable Code Point Declaration public string DI { get; set; } Property Value Type Description string | Edit this page View Source Dash Dash Declaration public string Dash { get; set; } Property Value Type Description string | Edit this page View Source Dep Deprecated Declaration public string Dep { get; set; } Property Value Type Description string | Edit this page View Source Dia Diacritic Declaration public string Dia { get; set; } Property Value Type Description string | Edit this page View Source Dm Decomposition mapping Declaration public string Dm { get; set; } Property Value Type Description string | Edit this page View Source Dt Decomposition type Declaration public string Dt { get; set; } Property Value Type Description string | Edit this page View Source EBase Emoji Base? Declaration public string EBase { get; set; } Property Value Type Description string | Edit this page View Source EComp Emoji Comp? Declaration public string EComp { get; set; } Property Value Type Description string | Edit this page View Source EMod Emoji Mod? Declaration public string EMod { get; set; } Property Value Type Description string | Edit this page View Source EPres Emoji Pres? Declaration public string EPres { get; set; } Property Value Type Description string | Edit this page View Source Ea East Asian width Declaration public string Ea { get; set; } Property Value Type Description string | Edit this page View Source Emoji Is the character an Emoji? Declaration public string Emoji { get; set; } Property Value Type Description string | Edit this page View Source Ext Extender Declaration public string Ext { get; set; } Property Value Type Description string | Edit this page View Source ExtPict Ext Pict? Declaration public string ExtPict { get; set; } Property Value Type Description string | Edit this page View Source FCNFKC FC NFKC Closure Declaration public string FCNFKC { get; set; } Property Value Type Description string | Edit this page View Source GCB Grapheme Cluster Break Declaration public string GCB { get; set; } Property Value Type Description string | Edit this page View Source Gc General category Declaration public string Gc { get; set; } Property Value Type Description string | Edit this page View Source GrBase Grapheme Base Declaration public string GrBase { get; set; } Property Value Type Description string | Edit this page View Source GrExt Grapheme Extended Declaration public string GrExt { get; set; } Property Value Type Description string | Edit this page View Source GrLink Grapheme Link Declaration public string GrLink { get; set; } Property Value Type Description string | Edit this page View Source Hex Hex digit Declaration public string Hex { get; set; } Property Value Type Description string | Edit this page View Source Hst Hangul Syllable Type Declaration public string Hst { get; set; } Property Value Type Description string | Edit this page View Source Hyphen Hyphen Declaration public string Hyphen { get; set; } Property Value Type Description string | Edit this page View Source IDC ID Continue Declaration public string IDC { get; set; } Property Value Type Description string | Edit this page View Source IDS ID Start Declaration public string IDS { get; set; } Property Value Type Description string | Edit this page View Source IDSB IDS Binary Operator Declaration public string IDSB { get; set; } Property Value Type Description string | Edit this page View Source IDST IDS Trinary Operator Declaration public string IDST { get; set; } Property Value Type Description string | Edit this page View Source Ideo Ideographic Declaration public string Ideo { get; set; } Property Value Type Description string | Edit this page View Source InPC Indic Positional Category Declaration public string InPC { get; set; } Property Value Type Description string | Edit this page View Source InSC Indic Syllabic Category Declaration public string InSC { get; set; } Property Value Type Description string | Edit this page View Source Isc ISO 10646 comment Declaration public string Isc { get; set; } Property Value Type Description string | Edit this page View Source Jg Joining group Declaration public string Jg { get; set; } Property Value Type Description string | Edit this page View Source JoinC Join Control Declaration public string JoinC { get; set; } Property Value Type Description string | Edit this page View Source Jsn Jamo Short Name Declaration public string Jsn { get; set; } Property Value Type Description string | Edit this page View Source Jt Joining class Declaration public string Jt { get; set; } Property Value Type Description string | Edit this page View Source KCangjie Cangjie Declaration public string KCangjie { get; set; } Property Value Type Description string | Edit this page View Source KCantonese Cantonese Declaration public string KCantonese { get; set; } Property Value Type Description string | Edit this page View Source KCompatibilityVariant Compatibility variant Declaration public string KCompatibilityVariant { get; set; } Property Value Type Description string | Edit this page View Source KDefinition Definition Declaration public string KDefinition { get; set; } Property Value Type Description string | Edit this page View Source KHanYu Han Yu Declaration public string KHanYu { get; set; } Property Value Type Description string | Edit this page View Source KHanyuPinyin Hanyu Pinyin Declaration public string KHanyuPinyin { get; set; } Property Value Type Description string | Edit this page View Source KIRGGSource IRD G Source Declaration public string KIRGGSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGHSource IRD H Source Declaration public string KIRGHSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGHanyuDaZidian IRG Hanyu Da Zidian Declaration public double KIRGHanyuDaZidian { get; set; } Property Value Type Description double | Edit this page View Source KIRGJSource IRD J Source Declaration public string KIRGJSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGKPSource IRD KP Source Declaration public string KIRGKPSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGKSource IRD K Source Declaration public string KIRGKSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGKangXi IRG Kang Xi Declaration public double KIRGKangXi { get; set; } Property Value Type Description double | Edit this page View Source KIRGMSource IRD M Source Declaration public string KIRGMSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGSSource IRD S Source Declaration public string KIRGSSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGTSource IRD T Source Declaration public string KIRGTSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGUKSource IRD UK Source Declaration public string KIRGUKSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGUSource IRD U Source Declaration public string KIRGUSource { get; set; } Property Value Type Description string | Edit this page View Source KIRGVSource IRD V Source Declaration public string KIRGVSource { get; set; } Property Value Type Description string | Edit this page View Source KKPS1 KPS1 Declaration public string KKPS1 { get; set; } Property Value Type Description string | Edit this page View Source KMandarin Mandarin Declaration public string KMandarin { get; set; } Property Value Type Description string | Edit this page View Source KPhonetic Phonetic Declaration public string KPhonetic { get; set; } Property Value Type Description string | Edit this page View Source KRSUnicode RS Unicode Declaration public string KRSUnicode { get; set; } Property Value Type Description string | Edit this page View Source KSBGY SBGY Declaration public string KSBGY { get; set; } Property Value Type Description string | Edit this page View Source KTotalStrokes Total strokes Declaration public string KTotalStrokes { get; set; } Property Value Type Description string | Edit this page View Source LOE Logical Order Exception Declaration public string LOE { get; set; } Property Value Type Description string | Edit this page View Source Lb Line break Declaration public string Lb { get; set; } Property Value Type Description string | Edit this page View Source Lc Case mapping Declaration public string Lc { get; set; } Property Value Type Description string | Edit this page View Source Lower Lowercase Declaration public string Lower { get; set; } Property Value Type Description string | Edit this page View Source Math Mathematic Declaration public string Math { get; set; } Property Value Type Description string | Edit this page View Source NChar Non-character code point Declaration public string NChar { get; set; } Property Value Type Description string | Edit this page View Source NFCQC NFC Quick Check Declaration public string NFCQC { get; set; } Property Value Type Description string | Edit this page View Source NFDQC NFD Quick Check Declaration public string NFDQC { get; set; } Property Value Type Description string | Edit this page View Source NFKCCF NFKC Casefold Declaration public string NFKCCF { get; set; } Property Value Type Description string | Edit this page View Source NFKCQC NFKC Quick Check Declaration public string NFKCQC { get; set; } Property Value Type Description string | Edit this page View Source NFKDQC NFKD Quick Check Declaration public string NFKDQC { get; set; } Property Value Type Description string | Edit this page View Source Na The name given by the current version of the Unicode standard Declaration public string Na { get; set; } Property Value Type Description string | Edit this page View Source Na1 The name this character had in version 1.0 of the Unicode standard Declaration public string Na1 { get; set; } Property Value Type Description string | Edit this page View Source Namealias Name aliases Declaration public List<Namealias> Namealias { get; set; } Property Value Type Description List<Namealias> | Edit this page View Source Nt Numeric type Declaration public string Nt { get; set; } Property Value Type Description string | Edit this page View Source Nv Numeric value Declaration public string Nv { get; set; } Property Value Type Description string | Edit this page View Source OAlpha Other Alphabetic Declaration public string OAlpha { get; set; } Property Value Type Description string | Edit this page View Source ODI Other Default Ignorable Code Point Declaration public string ODI { get; set; } Property Value Type Description string | Edit this page View Source OGrExt Other Grapheme Extended Declaration public string OGrExt { get; set; } Property Value Type Description string | Edit this page View Source OIDC Other ID Continue Declaration public string OIDC { get; set; } Property Value Type Description string | Edit this page View Source OIDS Other ID Start Declaration public string OIDS { get; set; } Property Value Type Description string | Edit this page View Source OLower Other Lowercase Declaration public string OLower { get; set; } Property Value Type Description string | Edit this page View Source OMath Other Mathematic Declaration public string OMath { get; set; } Property Value Type Description string | Edit this page View Source OUpper Other Uppercase Declaration public string OUpper { get; set; } Property Value Type Description string | Edit this page View Source PCM Prepended Concatenation Mark Declaration public string PCM { get; set; } Property Value Type Description string | Edit this page View Source PatSyn Pattern Syntax Declaration public string PatSyn { get; set; } Property Value Type Description string | Edit this page View Source PatWS Pattern Whitespace Declaration public string PatWS { get; set; } Property Value Type Description string | Edit this page View Source QMark Question mark Declaration public string QMark { get; set; } Property Value Type Description string | Edit this page View Source RI Regional Indicator Declaration public string RI { get; set; } Property Value Type Description string | Edit this page View Source Radical Radical Declaration public string Radical { get; set; } Property Value Type Description string | Edit this page View Source SB Sentence Break Declaration public string SB { get; set; } Property Value Type Description string | Edit this page View Source SD Sofrt Dotted Declaration public string SD { get; set; } Property Value Type Description string | Edit this page View Source STerm Sentence Terminal Declaration public string STerm { get; set; } Property Value Type Description string | Edit this page View Source Sc Script Declaration public string Sc { get; set; } Property Value Type Description string | Edit this page View Source Scf Simple case folding Declaration public string Scf { get; set; } Property Value Type Description string | Edit this page View Source Scx Script extension Declaration public string Scx { get; set; } Property Value Type Description string | Edit this page View Source Slc Simple case mapping Declaration public string Slc { get; set; } Property Value Type Description string | Edit this page View Source Stc Simple case mapping Declaration public string Stc { get; set; } Property Value Type Description string | Edit this page View Source Suc Simple case mapping Declaration public string Suc { get; set; } Property Value Type Description string | Edit this page View Source Tc Case mapping Declaration public string Tc { get; set; } Property Value Type Description string | Edit this page View Source Term Terminal Declaration public string Term { get; set; } Property Value Type Description string | Edit this page View Source UIdeo Unified Ideographic Declaration public string UIdeo { get; set; } Property Value Type Description string | Edit this page View Source Uc Case mapping Declaration public string Uc { get; set; } Property Value Type Description string | Edit this page View Source Upper Uppercase Declaration public string Upper { get; set; } Property Value Type Description string | Edit this page View Source VS Variation Selector Declaration public string VS { get; set; } Property Value Type Description string | Edit this page View Source Vo Vertical Orientation Declaration public string Vo { get; set; } Property Value Type Description string | Edit this page View Source WB Word Break Declaration public string WB { get; set; } Property Value Type Description string | Edit this page View Source WSpace White space Declaration public string WSpace { get; set; } Property Value Type Description string | Edit this page View Source XIDC XID Continue Declaration public string XIDC { get; set; } Property Value Type Description string | Edit this page View Source XIDS XID Start Declaration public string XIDS { get; set; } Property Value Type Description string | Edit this page View Source XONFC Expands on NFC Declaration public string XONFC { get; set; } Property Value Type Description string | Edit this page View Source XONFD Expands on NFD Declaration public string XONFD { get; set; } Property Value Type Description string | Edit this page View Source XONFKC Expands on NFKC Declaration public string XONFKC { get; set; } Property Value Type Description string | Edit this page View Source XONFKD Expands on NFKD Declaration public string XONFKD { get; set; } Property Value Type Description string"
  },
  "api/Textify.Data.Analysis.Unicode.Namealias.html": {
    "href": "api/Textify.Data.Analysis.Unicode.Namealias.html",
    "title": "Class Namealias | Textify API - Aptivi",
    "keywords": "Class Namealias Name alias Inheritance object Namealias Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public class Namealias Properties | Edit this page View Source Alias Alias name Declaration public string Alias { get; set; } Property Value Type Description string | Edit this page View Source Type Alias type Declaration public string Type { get; set; } Property Value Type Description string"
  },
  "api/Textify.Data.Analysis.Unicode.Repertoire.html": {
    "href": "api/Textify.Data.Analysis.Unicode.Repertoire.html",
    "title": "Class Repertoire | Textify API - Aptivi",
    "keywords": "Class Repertoire Character repertoire Inheritance object Repertoire Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public class Repertoire Properties | Edit this page View Source Char List of characters Declaration public Char[] Char { get; set; } Property Value Type Description Char[]"
  },
  "api/Textify.Data.Analysis.Unicode.Ucd.html": {
    "href": "api/Textify.Data.Analysis.Unicode.Ucd.html",
    "title": "Class Ucd | Textify API - Aptivi",
    "keywords": "Class Ucd Unicode Database Inheritance object Ucd Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public class Ucd Properties | Edit this page View Source Description Unicode version Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source Repertoire The Repertoire Declaration public Repertoire Repertoire { get; set; } Property Value Type Description Repertoire | Edit this page View Source Text Text Declaration public string Text { get; set; } Property Value Type Description string | Edit this page View Source Xmlns XML namespace Declaration public string Xmlns { get; set; } Property Value Type Description string"
  },
  "api/Textify.Data.Analysis.Unicode.UnicodeQuery.html": {
    "href": "api/Textify.Data.Analysis.Unicode.UnicodeQuery.html",
    "title": "Class UnicodeQuery | Textify API - Aptivi",
    "keywords": "Class UnicodeQuery Unicode querying tools Inheritance object UnicodeQuery Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public static class UnicodeQuery Methods | Edit this page View Source QueryChar(char) Queries the character Declaration public static Char QueryChar(char character) Parameters Type Name Description char character Character Returns Type Description Char | Edit this page View Source QueryChar(char, UnicodeQueryType) Queries the character Declaration public static Char QueryChar(char character, UnicodeQueryType type) Parameters Type Name Description char character Character UnicodeQueryType type Database type to query Returns Type Description Char | Edit this page View Source QueryChar(int) Queries the character Declaration public static Char QueryChar(int charNum) Parameters Type Name Description int charNum Character number Returns Type Description Char | Edit this page View Source QueryChar(int, UnicodeQueryType) Queries the character Declaration public static Char QueryChar(int charNum, UnicodeQueryType type) Parameters Type Name Description int charNum Character number UnicodeQueryType type Database type to query Returns Type Description Char"
  },
  "api/Textify.Data.Analysis.Unicode.UnicodeQueryType.html": {
    "href": "api/Textify.Data.Analysis.Unicode.UnicodeQueryType.html",
    "title": "Enum UnicodeQueryType | Textify API - Aptivi",
    "keywords": "Enum UnicodeQueryType Unicode character query type Namespace: Textify.Data.Analysis.Unicode Assembly: Textify.Data.Analysis.dll Syntax public enum UnicodeQueryType Fields Name Description Full All characters Simple Simple Unicode characters without the Unihan characters Unihan Unihan characters"
  },
  "api/Textify.Data.Analysis.Unicode.html": {
    "href": "api/Textify.Data.Analysis.Unicode.html",
    "title": "Namespace Textify.Data.Analysis.Unicode | Textify API - Aptivi",
    "keywords": "Namespace Textify.Data.Analysis.Unicode Classes Char Character Namealias Name alias Repertoire Character repertoire Ucd Unicode Database UnicodeQuery Unicode querying tools Enums UnicodeQueryType Unicode character query type"
  },
  "api/Textify.Data.Analysis.Words.Profanity.ProfanityManager.html": {
    "href": "api/Textify.Data.Analysis.Words.Profanity.ProfanityManager.html",
    "title": "Class ProfanityManager | Textify API - Aptivi",
    "keywords": "Class ProfanityManager Profanity management class Inheritance object ProfanityManager Namespace: Textify.Data.Analysis.Words.Profanity Assembly: Textify.Data.Analysis.dll Syntax public static class ProfanityManager Methods | Edit this page View Source FilterProfanities(string, ProfanitySearchType) Filter profane words in the sentence Declaration public static string FilterProfanities(string sentence, ProfanitySearchType searchType = ProfanitySearchType.Shallow) Parameters Type Name Description string sentence A sentence which may contain profanity ProfanitySearchType searchType Specifies how to analyze the sentence Returns Type Description string A filtered sentence that contain censored profanity with asterisks | Edit this page View Source GetProfanities(string, ProfanitySearchType) Gets a list of profane words in a sentence Declaration public static ProfanityOccurrenceInfo[] GetProfanities(string sentence, ProfanitySearchType searchType = ProfanitySearchType.Shallow) Parameters Type Name Description string sentence A sentence which may contain profanity ProfanitySearchType searchType Specifies how to analyze the sentence Returns Type Description ProfanityOccurrenceInfo[] An array of profanity occurrence info"
  },
  "api/Textify.Data.Analysis.Words.Profanity.ProfanityOccurrenceInfo.html": {
    "href": "api/Textify.Data.Analysis.Words.Profanity.ProfanityOccurrenceInfo.html",
    "title": "Class ProfanityOccurrenceInfo | Textify API - Aptivi",
    "keywords": "Class ProfanityOccurrenceInfo Profanity occurrence info class Inheritance object ProfanityOccurrenceInfo Namespace: Textify.Data.Analysis.Words.Profanity Assembly: Textify.Data.Analysis.dll Syntax public class ProfanityOccurrenceInfo Properties | Edit this page View Source ProfaneIndex Index of the profane word in which the profanity manager has matched successfully Declaration public int ProfaneIndex { get; } Property Value Type Description int | Edit this page View Source ProfaneWord The profane word in which the profanity manager has matched successfully Declaration public string ProfaneWord { get; } Property Value Type Description string | Edit this page View Source SourceIndex Index of the source word containing either a profane word or being a profane word Declaration public int SourceIndex { get; } Property Value Type Description int | Edit this page View Source SourceSentence The source sentence in which the profanity manager has analyzed Declaration public string SourceSentence { get; } Property Value Type Description string | Edit this page View Source SourceWord The source word containing either a profane word or being a profane word Declaration public string SourceWord { get; } Property Value Type Description string"
  },
  "api/Textify.Data.Analysis.Words.Profanity.ProfanitySearchType.html": {
    "href": "api/Textify.Data.Analysis.Words.Profanity.ProfanitySearchType.html",
    "title": "Enum ProfanitySearchType | Textify API - Aptivi",
    "keywords": "Enum ProfanitySearchType Profanity search type Namespace: Textify.Data.Analysis.Words.Profanity Assembly: Textify.Data.Analysis.dll Syntax public enum ProfanitySearchType Fields Name Description Mitigated Mitigated partial searching. May not find swearing that has its characters separated by whitespace. Partial Partial searching. May cause legitimate words to be found, such as Scunthorpe. Shallow Shallow searching. May not find swearing embedded in two or more words and/or separated by whitespace. Thorough Thorough searching. May not find swearing embedded in two or more words."
  },
  "api/Textify.Data.Analysis.Words.Profanity.html": {
    "href": "api/Textify.Data.Analysis.Words.Profanity.html",
    "title": "Namespace Textify.Data.Analysis.Words.Profanity | Textify API - Aptivi",
    "keywords": "Namespace Textify.Data.Analysis.Words.Profanity Classes ProfanityManager Profanity management class ProfanityOccurrenceInfo Profanity occurrence info class Enums ProfanitySearchType Profanity search type"
  },
  "api/Textify.Data.Analysis.Words.WordDataType.html": {
    "href": "api/Textify.Data.Analysis.Words.WordDataType.html",
    "title": "Enum WordDataType | Textify API - Aptivi",
    "keywords": "Enum WordDataType Word data type to select what kind of words do we need to fetch Namespace: Textify.Data.Analysis.Words Assembly: Textify.Data.Analysis.dll Syntax public enum WordDataType Fields Name Description BadWords Offensive words list (18+) for bad word filtering CommonWords Common word list CommonWordsDirty Common word list, including offensive words (18+) Words Word list WordsDirty Word list, including offensive words (18+) WordsDirtyFull Word list, including offensive words (18+) and alphanumeric characters WordsFull Word list, including alphanumeric characters"
  },
  "api/Textify.Data.Analysis.Words.WordManager.html": {
    "href": "api/Textify.Data.Analysis.Words.WordManager.html",
    "title": "Class WordManager | Textify API - Aptivi",
    "keywords": "Class WordManager The word management class Inheritance object WordManager Namespace: Textify.Data.Analysis.Words Assembly: Textify.Data.Analysis.dll Syntax public static class WordManager Methods | Edit this page View Source GetRandomWord(WordDataType) Gets a random word Declaration public static string GetRandomWord(WordDataType type = WordDataType.Words) Parameters Type Name Description WordDataType type Specifies the word data type Returns Type Description string A random word | Edit this page View Source GetRandomWordAsync(WordDataType) Gets a random word Declaration public static Task<string> GetRandomWordAsync(WordDataType type = WordDataType.Words) Parameters Type Name Description WordDataType type Returns Type Description Task<string> A random word | Edit this page View Source GetRandomWordConditional(int, string, string, int, WordDataType) Gets a random word conditionally Declaration public static string GetRandomWordConditional(int wordMaxLength, string wordStartsWith, string wordEndsWith, int wordExactLength, WordDataType type = WordDataType.Words) Parameters Type Name Description int wordMaxLength The maximum length of the word string wordStartsWith The word starts with... string wordEndsWith The word ends with... int wordExactLength The exact length of the word WordDataType type Specifies the word data type Returns Type Description string A random word | Edit this page View Source GetRandomWordConditionalAsync(int, string, string, int, WordDataType) Gets a random word conditionally Declaration public static Task<string> GetRandomWordConditionalAsync(int wordMaxLength, string wordStartsWith, string wordEndsWith, int wordExactLength, WordDataType type = WordDataType.Words) Parameters Type Name Description int wordMaxLength The maximum length of the word string wordStartsWith The word starts with... string wordEndsWith The word ends with... int wordExactLength The exact length of the word WordDataType type Specifies the word data type Returns Type Description Task<string> A random word | Edit this page View Source GetWords(WordDataType) Gets all words Declaration public static string[] GetWords(WordDataType type = WordDataType.Words) Parameters Type Name Description WordDataType type Specifies the word data type Returns Type Description string[] | Edit this page View Source GetWordsAsync(WordDataType) Gets all words Declaration public static Task<string[]> GetWordsAsync(WordDataType type = WordDataType.Words) Parameters Type Name Description WordDataType type Returns Type Description Task<string[]>"
  },
  "api/Textify.Data.Analysis.Words.html": {
    "href": "api/Textify.Data.Analysis.Words.html",
    "title": "Namespace Textify.Data.Analysis.Words | Textify API - Aptivi",
    "keywords": "Namespace Textify.Data.Analysis.Words Classes WordManager The word management class Enums WordDataType Word data type to select what kind of words do we need to fetch"
  },
  "api/Textify.General.CharManager.html": {
    "href": "api/Textify.General.CharManager.html",
    "title": "Class CharManager | Textify API - Aptivi",
    "keywords": "Class CharManager Character querying and management module Inheritance object CharManager Namespace: Textify.General Assembly: Textify.dll Syntax public static class CharManager Properties | Edit this page View Source NewLine New line constant Declaration public static string NewLine { get; } Property Value Type Description string Methods | Edit this page View Source GetAllAsciiChars() Gets all the letters and the numbers (ASCII). Declaration public static char[] GetAllAsciiChars() Returns Type Description char[] | Edit this page View Source GetAllChars() Gets all the letters and the numbers (Unicode). Declaration public static char[] GetAllChars() Returns Type Description char[] | Edit this page View Source GetAllControlChars() Gets all the control characters. Declaration public static char[] GetAllControlChars() Returns Type Description char[] | Edit this page View Source GetAllDigitChars(bool) Gets all the characters that represents a digit. Declaration public static char[] GetAllDigitChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllHighSurrogateChars() Gets all the characters that represents a high surrogate character. Declaration public static char[] GetAllHighSurrogateChars() Returns Type Description char[] | Edit this page View Source GetAllLetters(bool) Gets all the letters. Declaration public static char[] GetAllLetters(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllLettersAndNumbers(bool) Gets all the letters and the numbers. Declaration public static char[] GetAllLettersAndNumbers(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllLowSurrogateChars() Gets all the characters that represents a low surrogate character. Declaration public static char[] GetAllLowSurrogateChars() Returns Type Description char[] | Edit this page View Source GetAllLowerChars(bool) Gets all the characters that represents a lowercase character. Declaration public static char[] GetAllLowerChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllNumbers(bool) Gets all the numbers. Declaration public static char[] GetAllNumbers(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllPunctuationChars(bool) Gets all the characters that represents a punctuation. Declaration public static char[] GetAllPunctuationChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllRealControlChars() Gets all the real control characters for binary file comparison. Declaration public static char[] GetAllRealControlChars() Returns Type Description char[] | Edit this page View Source GetAllSeparatorChars(bool) Gets all the characters that represents a separator. Declaration public static char[] GetAllSeparatorChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllSurrogateChars() Gets all the characters that represents a surrogate character. Declaration public static char[] GetAllSurrogateChars() Returns Type Description char[] | Edit this page View Source GetAllSymbolChars(bool) Gets all the characters that represents a separator. Declaration public static char[] GetAllSymbolChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllUpperChars(bool) Gets all the characters that represents a uppercase character. Declaration public static char[] GetAllUpperChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetAllWhitespaceChars(bool) Gets all the characters that represents a white space. Declaration public static char[] GetAllWhitespaceChars(bool unicode = true) Parameters Type Name Description bool unicode Returns Type Description char[] | Edit this page View Source GetEsc() A simplification for casting to return the ESC character Declaration public static char GetEsc() Returns Type Description char ESC | Edit this page View Source IsControlChar(char) Is the character a real control character Declaration public static bool IsControlChar(char ch) Parameters Type Name Description char ch Character to query Returns Type Description bool"
  },
  "api/Textify.General.EnclosedDoubleQuotesType.html": {
    "href": "api/Textify.General.EnclosedDoubleQuotesType.html",
    "title": "Enum EnclosedDoubleQuotesType | Textify API - Aptivi",
    "keywords": "Enum EnclosedDoubleQuotesType Type of enclosed double quotes in a word or phrase Namespace: Textify.General Assembly: Textify.dll Syntax public enum EnclosedDoubleQuotesType Fields Name Description Backticks Text enclosed by the backticks DoubleQuotes Text enclosed by the double quotes None No double quotes to be enclosed SingleQuotes Text enclosed by the single quotes"
  },
  "api/Textify.General.TextTools.html": {
    "href": "api/Textify.General.TextTools.html",
    "title": "Class TextTools | Textify API - Aptivi",
    "keywords": "Class TextTools Tools for text manipulation Inheritance object TextTools Namespace: Textify.General Assembly: Textify.dll Syntax public static class TextTools Methods | Edit this page View Source AllIndexesOf(string, string) Get all indexes of a value in string Declaration public static IEnumerable<int> AllIndexesOf(this string target, string value) Parameters Type Name Description string target Source string string value A value Returns Type Description IEnumerable<int> Indexes of strings | Edit this page View Source ContainsAllOf(string, string[]) Checks to see if the string contains all of the target strings. Declaration public static bool ContainsAllOf(this string source, string[] targets) Parameters Type Name Description string source Source string string[] targets Target strings Returns Type Description bool True if all of them are found; else, false. | Edit this page View Source ContainsAnyOf(string, string[]) Checks to see if the string contains any of the target strings. Declaration public static bool ContainsAnyOf(this string source, string[] targets) Parameters Type Name Description string source Source string string[] targets Target strings Returns Type Description bool True if one of them is found; otherwise, false. | Edit this page View Source EndsWithAllOf(string, string[]) Checks to see if the string ends with all of the values Declaration public static bool EndsWithAllOf(this string source, string[] values) Parameters Type Name Description string source Target string string[] values Values Returns Type Description bool | Edit this page View Source EndsWithAnyOf(string, string[]) Checks to see if the string ends with any of the values Declaration public static bool EndsWithAnyOf(this string source, string[] values) Parameters Type Name Description string source Target string string[] values Values Returns Type Description bool | Edit this page View Source Escape(string) Gets a string containing escaped characters Declaration public static string Escape(this string target) Parameters Type Name Description string target Target string to escape characters Returns Type Description string A string containing escaped characters | Edit this page View Source FormatString(string, params object[]) Formats the string Declaration public static string FormatString(this string Format, params object[] Vars) Parameters Type Name Description string Format The string to format object[] Vars The variables used Returns Type Description string A formatted string if successful, or the unformatted one if failed. | Edit this page View Source GetBase64Decoded(string) Gets a BASE64-decoded string from the BASE64-encoded string Declaration public static string GetBase64Decoded(this string text) Parameters Type Name Description string text Text to encode to BASE64 Returns Type Description string A BASE64-encoded string from the text | Edit this page View Source GetBase64Encoded(string) Gets a BASE64-encoded string from the text Declaration public static string GetBase64Encoded(this string text) Parameters Type Name Description string text Text to encode to BASE64 Returns Type Description string A BASE64-encoded string from the text | Edit this page View Source GetEnclosedDoubleQuotesType(string) Gets the enclosed double quotes type from the string Declaration public static EnclosedDoubleQuotesType GetEnclosedDoubleQuotesType(this string target) Parameters Type Name Description string target Target string to query Returns Type Description EnclosedDoubleQuotesType EnclosedDoubleQuotesType containing information about the current string enclosure | Edit this page View Source GetEnclosedWordFromIndex(string, int, bool) Gets enclosed word from index that represents a start of a substring Declaration public static string GetEnclosedWordFromIndex(this string target, int sourceIdx, bool includeSymbols = false) Parameters Type Name Description string target Target string that contains a substring int sourceIdx Target string index that usually starts a substring bool includeSymbols Whether to include symbols, such as punctuation, in the search or not Returns Type Description string The enclosed word from the specified index | Edit this page View Source GetIndexOfEnclosedWordFromIndex(string, int, bool) Gets the index of the enclosed word from index that represents a start of a substring Declaration public static int GetIndexOfEnclosedWordFromIndex(this string target, int sourceIdx, bool includeSymbols = false) Parameters Type Name Description string target Target string that contains a substring int sourceIdx Target string index that usually starts a substring bool includeSymbols Whether to include symbols, such as punctuation, in the search or not Returns Type Description int The index of the enclosed enclosed word from the specified index, or -1 if the string is empty | Edit this page View Source GetLetterRepetitionPattern(string, int) Gets the letter repetition pattern (LRP) that determines how many times the program needs to step \"steps\" times on the string until it reaches the end of the string. Declaration public static int GetLetterRepetitionPattern(this string target, int steps) Parameters Type Name Description string target Target string int steps Number of steps Returns Type Description int | Edit this page View Source GetLetterRepetitionPatternTable(string, bool) Gets the letter repetition pattern (LRP) table from the length of the string Declaration public static ReadOnlyDictionary<int, int> GetLetterRepetitionPatternTable(this string target, bool twice = false) Parameters Type Name Description string target Target string bool twice Whether to add the LRP of the string using the number of steps up to twice the string length or not Returns Type Description ReadOnlyDictionary<int, int> | Edit this page View Source GetListOfRepeatedLetters(string, bool) Gets the list of repeated letters, including those that have occurred only once Declaration public static ReadOnlyDictionary<char, int> GetListOfRepeatedLetters(this string target, bool removeSingle = false) Parameters Type Name Description string target Target string bool removeSingle Whether to remove all characters that only contain a single occurrence or not Returns Type Description ReadOnlyDictionary<char, int> | Edit this page View Source GetWrappedSentences(string, int) Gets the wrapped sentences for text wrapping for console (with character wrapping, without VT sequence support) Declaration public static string[] GetWrappedSentences(this string text, int maximumLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping Returns Type Description string[] Remarks If you want to be able to use the VT-sequence-enabled version, you must use Terminaux 3.0 or later. | Edit this page View Source GetWrappedSentences(string, int, int) Gets the wrapped sentences for text wrapping for console (with character wrapping, without VT sequence support) Declaration public static string[] GetWrappedSentences(this string text, int maximumLength, int indentLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping int indentLength Indentation length Returns Type Description string[] Remarks If you want to be able to use the VT-sequence-enabled version, you must use Terminaux 3.0 or later. | Edit this page View Source GetWrappedSentencesByWords(string, int) Gets the wrapped sentences for text wrapping for console (with word wrapping, without VT sequence support) Declaration public static string[] GetWrappedSentencesByWords(this string text, int maximumLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping Returns Type Description string[] Remarks If you want to be able to use the VT-sequence-enabled version, you must use Terminaux 3.0 or later. | Edit this page View Source GetWrappedSentencesByWords(string, int, int) Gets the wrapped sentences for text wrapping for console (with word wrapping, without VT sequence support) Declaration public static string[] GetWrappedSentencesByWords(this string text, int maximumLength, int indentLength) Parameters Type Name Description string text Text to be wrapped int maximumLength Maximum length of text before wrapping int indentLength Indentation length Returns Type Description string[] Remarks If you want to be able to use the VT-sequence-enabled version, you must use Terminaux 3.0 or later. | Edit this page View Source IsStringNumeric(string) Is the string numeric? Declaration public static bool IsStringNumeric(this string Expression) Parameters Type Name Description string Expression The expression Returns Type Description bool | Edit this page View Source LowerFirst(string) Makes the first character of the string lowercase Declaration public static string LowerFirst(this string target) Parameters Type Name Description string target The target string Returns Type Description string A string that starts with the small letter | Edit this page View Source ReleaseDoubleQuotes(string) Releases a string from double quotations Declaration public static string ReleaseDoubleQuotes(this string target) Parameters Type Name Description string target Target string Returns Type Description string A string that doesn't contain double quotation marks at the start and at the end of the string | Edit this page View Source RemovePrefix(string, string) Removes a prefix from the text Declaration public static string RemovePrefix(this string text, string prefix) Parameters Type Name Description string text string prefix Returns Type Description string | Edit this page View Source RemoveSuffix(string, string) Removes a suffix from the text Declaration public static string RemoveSuffix(this string text, string suffix) Parameters Type Name Description string text string suffix Returns Type Description string | Edit this page View Source ReplaceAll(string, string[], string) Replaces all the instances of strings with a string Declaration public static string ReplaceAll(this string target, string[] toBeReplaced, string toReplace) Parameters Type Name Description string target Target string string[] toBeReplaced Strings to be replaced string toReplace String to replace with Returns Type Description string Modified string Exceptions Type Condition ArgumentNullException | Edit this page View Source ReplaceAllRange(string, string[], string[]) Replaces all the instances of strings with a string assigned to each entry Declaration public static string ReplaceAllRange(this string target, string[] toBeReplaced, string[] toReplace) Parameters Type Name Description string target Target string string[] toBeReplaced Strings to be replaced string[] toReplace Strings to replace with Returns Type Description string Modified string Exceptions Type Condition ArgumentNullException ArgumentException | Edit this page View Source ReplaceLastOccurrence(string, string, string) Replaces last occurrence of a text in source string with the replacement Declaration public static string ReplaceLastOccurrence(this string source, string searchText, string replace) Parameters Type Name Description string source A string which has the specified text to replace string searchText A string to be replaced string replace A string to replace Returns Type Description string String that has its last occurrence of text replaced | Edit this page View Source Reverse(string) Reverses the order of characters in a string Declaration public static string Reverse(this string target) Parameters Type Name Description string target Target string Returns Type Description string | Edit this page View Source ShiftLetters(string, int) Shifts the letters in a string Declaration public static string ShiftLetters(this string text, int shift) Parameters Type Name Description string text Text to shift int shift How many times to shift Returns Type Description string A string containing shifted letters | Edit this page View Source SplitEncloseDoubleQuotes(string) Splits the string enclosed in double quotes delimited by spaces using regular expression formula Declaration public static string[] SplitEncloseDoubleQuotes(this string target) Parameters Type Name Description string target Target string Returns Type Description string[] | Edit this page View Source SplitEncloseDoubleQuotesNoRelease(string) Splits the string enclosed in double quotes delimited by spaces using regular expression formula without releasing double quotes Declaration public static string[] SplitEncloseDoubleQuotesNoRelease(this string target) Parameters Type Name Description string target Target string Returns Type Description string[] | Edit this page View Source SplitNewLines(string, bool) Makes a string array with new line as delimiter Declaration public static string[] SplitNewLines(this string target, bool emptyStrings = true) Parameters Type Name Description string target Target string bool emptyStrings Whether to include empty strings in the output or not Returns Type Description string[] List of words that are separated by the new lines | Edit this page View Source SplitNewLinesOld(string) Makes a string array with new line as delimiter (the old way) Declaration [Obsolete(\"This doesn't properly split Mac OS 9 newlines.\")] public static string[] SplitNewLinesOld(this string target) Parameters Type Name Description string target Target string Returns Type Description string[] List of words that are separated by the new lines | Edit this page View Source StartsWithAllOf(string, string[]) Checks to see if the string starts with all of the values Declaration public static bool StartsWithAllOf(this string source, string[] values) Parameters Type Name Description string source Target string string[] values Values Returns Type Description bool | Edit this page View Source StartsWithAnyOf(string, string[]) Checks to see if the string starts with any of the values Declaration public static bool StartsWithAnyOf(this string target, string[] values) Parameters Type Name Description string target Target string string[] values Values Returns Type Description bool True if the string starts with any of the values specified in the array. Otherwise, false. | Edit this page View Source ToTitleCase(string) Title cases the string Declaration public static string ToTitleCase(this string target) Parameters Type Name Description string target String to convert to title case Returns Type Description string The string that has title case | Edit this page View Source TruncateString(string, int) Truncates the string if the string is larger than the threshold, otherwise, returns an unchanged string (without VT sequence support) Declaration public static string TruncateString(this string target, int threshold) Parameters Type Name Description string target Source string to truncate int threshold Max number of string characters Returns Type Description string Truncated string Remarks If you want to be able to use the VT-sequence-enabled version, you must use Terminaux 3.0 or later. | Edit this page View Source Unescape(string) Gets a string containing unescaped characters Declaration public static string Unescape(this string target) Parameters Type Name Description string target Target string to unescape characters Returns Type Description string A string containing unescaped characters | Edit this page View Source UnixifyNewLines(string) Converts any existing new lines (Windows and Mac OS 9) to Unix format (Line Feeds) for universal parsing and for general use Declaration public static string UnixifyNewLines(this string target) Parameters Type Name Description string target Target string Returns Type Description string A string that contains new lines converted to the Unix format Exceptions Type Condition TextifyException | Edit this page View Source UpperFirst(string) Makes the first character of the string uppercase Declaration public static string UpperFirst(this string target) Parameters Type Name Description string target The target string Returns Type Description string A string that starts with the capital letter"
  },
  "api/Textify.General.html": {
    "href": "api/Textify.General.html",
    "title": "Namespace Textify.General | Textify API - Aptivi",
    "keywords": "Namespace Textify.General Classes CharManager Character querying and management module TextTools Tools for text manipulation Enums EnclosedDoubleQuotesType Type of enclosed double quotes in a word or phrase"
  },
  "api/Textify.Json.JsonTools.html": {
    "href": "api/Textify.Json.JsonTools.html",
    "title": "Class JsonTools | Textify API - Aptivi",
    "keywords": "Class JsonTools JSON tools Inheritance object JsonTools Namespace: Textify.Json Assembly: Textify.Json.dll Syntax public static class JsonTools Methods | Edit this page View Source BeautifyJson(string) Beautifies the JSON text contained in the file. Declaration public static string BeautifyJson(string JsonFile) Parameters Type Name Description string JsonFile Path to JSON file. Returns Type Description string Beautified JSON Exceptions Type Condition FileNotFoundException | Edit this page View Source BeautifyJsonText(string) Beautifies the JSON text. Declaration public static string BeautifyJsonText(string JsonText) Parameters Type Name Description string JsonText Contents of a minified JSON. Returns Type Description string Beautified JSON | Edit this page View Source FindDifferences(JToken, JToken) Finds the JSON object differences between the two JSON object tokens Declaration public static JObject FindDifferences(JToken sourceObj, JToken targetObj) Parameters Type Name Description JToken sourceObj Source object token JToken targetObj Target object token Returns Type Description JObject A JSON object containing differences for objects | Edit this page View Source MinifyJson(string) Minifies the JSON text contained in the file. Declaration public static string MinifyJson(string JsonFile) Parameters Type Name Description string JsonFile Path to JSON file. Returns Type Description string Minified JSON Exceptions Type Condition FileNotFoundException | Edit this page View Source MinifyJsonText(string) Minifies the JSON text. Declaration public static string MinifyJsonText(string JsonText) Parameters Type Name Description string JsonText Contents of a beautified JSON. Returns Type Description string Minified JSON"
  },
  "api/Textify.Json.html": {
    "href": "api/Textify.Json.html",
    "title": "Namespace Textify.Json | Textify API - Aptivi",
    "keywords": "Namespace Textify.Json Classes JsonTools JSON tools"
  },
  "api/Textify.SpaceManager.Analysis.SpaceAnalysisResult.html": {
    "href": "api/Textify.SpaceManager.Analysis.SpaceAnalysisResult.html",
    "title": "Class SpaceAnalysisResult | Textify API - Aptivi",
    "keywords": "Class SpaceAnalysisResult A class for the space analysis result Inheritance object SpaceAnalysisResult Namespace: Textify.SpaceManager.Analysis Assembly: Textify.dll Syntax public class SpaceAnalysisResult Properties | Edit this page View Source FalseSpaces Gets the array of false spaces with their indexes in the text Declaration public (char, string)[] FalseSpaces { get; } Property Value Type Description (char, string)[] | Edit this page View Source ResultingStream Gets the stream from the analysis Declaration public Stream ResultingStream { get; } Property Value Type Description Stream"
  },
  "api/Textify.SpaceManager.Analysis.SpaceAnalysisTools.html": {
    "href": "api/Textify.SpaceManager.Analysis.SpaceAnalysisTools.html",
    "title": "Class SpaceAnalysisTools | Textify API - Aptivi",
    "keywords": "Class SpaceAnalysisTools Space analysis tools Inheritance object SpaceAnalysisTools Namespace: Textify.SpaceManager.Analysis Assembly: Textify.dll Syntax public static class SpaceAnalysisTools Methods | Edit this page View Source AnalyzeSpaces(string) Analyzes spaces from the given text Declaration public static SpaceAnalysisResult AnalyzeSpaces(string text) Parameters Type Name Description string text Text to analyze Returns Type Description SpaceAnalysisResult Analysis results | Edit this page View Source AnalyzeSpacesFrom(Stream) Analyzes spaces from the given stream Declaration public static SpaceAnalysisResult AnalyzeSpacesFrom(Stream stream) Parameters Type Name Description Stream stream Stream to analyze Returns Type Description SpaceAnalysisResult Analysis results | Edit this page View Source AnalyzeSpacesFrom(string) Analyzes spaces from the given path to file Declaration public static SpaceAnalysisResult AnalyzeSpacesFrom(string pathToFile) Parameters Type Name Description string pathToFile File to analyze Returns Type Description SpaceAnalysisResult Analysis results"
  },
  "api/Textify.SpaceManager.Analysis.html": {
    "href": "api/Textify.SpaceManager.Analysis.html",
    "title": "Namespace Textify.SpaceManager.Analysis | Textify API - Aptivi",
    "keywords": "Namespace Textify.SpaceManager.Analysis Classes SpaceAnalysisResult A class for the space analysis result SpaceAnalysisTools Space analysis tools"
  },
  "api/Textify.SpaceManager.Conversion.SpaceConversionTools.html": {
    "href": "api/Textify.SpaceManager.Conversion.SpaceConversionTools.html",
    "title": "Class SpaceConversionTools | Textify API - Aptivi",
    "keywords": "Class SpaceConversionTools Tools that allow you to use the analysis results to convert the spaces Inheritance object SpaceConversionTools Namespace: Textify.SpaceManager.Conversion Assembly: Textify.dll Syntax public static class SpaceConversionTools Methods | Edit this page View Source ConvertSpaces(SpaceAnalysisResult) Converts spaces from the given analysis result to the normal spaces Declaration public static byte[] ConvertSpaces(SpaceAnalysisResult analysisResult) Parameters Type Name Description SpaceAnalysisResult analysisResult Given analysis result Returns Type Description byte[] Byte array containing converted spaces | Edit this page View Source ConvertSpacesTo(SpaceAnalysisResult, Stream) Converts spaces from the given analysis result to the normal spaces and saves the output to the stream Declaration public static void ConvertSpacesTo(SpaceAnalysisResult analysisResult, Stream stream) Parameters Type Name Description SpaceAnalysisResult analysisResult Given analysis result Stream stream Stream to save the output to | Edit this page View Source ConvertSpacesTo(SpaceAnalysisResult, string) Converts spaces from the given analysis result to the normal spaces and saves the output to the file Declaration public static void ConvertSpacesTo(SpaceAnalysisResult analysisResult, string pathToFile) Parameters Type Name Description SpaceAnalysisResult analysisResult Given analysis result string pathToFile File to save the output to | Edit this page View Source ConvertSpacesToString(SpaceAnalysisResult) Converts spaces from the given analysis result to the normal spaces and saves the output to the file Declaration public static string ConvertSpacesToString(SpaceAnalysisResult analysisResult) Parameters Type Name Description SpaceAnalysisResult analysisResult Given analysis result Returns Type Description string"
  },
  "api/Textify.SpaceManager.Conversion.html": {
    "href": "api/Textify.SpaceManager.Conversion.html",
    "title": "Namespace Textify.SpaceManager.Conversion | Textify API - Aptivi",
    "keywords": "Namespace Textify.SpaceManager.Conversion Classes SpaceConversionTools Tools that allow you to use the analysis results to convert the spaces"
  },
  "api/Textify.Tools.RegexTools.html": {
    "href": "api/Textify.Tools.RegexTools.html",
    "title": "Class RegexTools | Textify API - Aptivi",
    "keywords": "Class RegexTools Regular expression tools Inheritance object RegexTools Namespace: Textify.Tools Assembly: Textify.dll Syntax public static class RegexTools Methods | Edit this page View Source IsValidRegex(string) Determines whether the specified regular expression pattern is valid or not Declaration public static bool IsValidRegex(string pattern) Parameters Type Name Description string pattern Specified pattern Returns Type Description bool True if valid; false otherwise | Edit this page View Source IsValidRegex(Regex) Determines whether the specified regular expression pattern is valid or not Declaration public static bool IsValidRegex(Regex pattern) Parameters Type Name Description Regex pattern Specified pattern Returns Type Description bool True if valid; false otherwise"
  },
  "api/Textify.Tools.TextifyException.html": {
    "href": "api/Textify.Tools.TextifyException.html",
    "title": "Class TextifyException | Textify API - Aptivi",
    "keywords": "Class TextifyException Textify error class Inheritance object Exception TextifyException Namespace: Textify.Tools Assembly: Textify.dll Syntax public class TextifyException : Exception Constructors | Edit this page View Source TextifyException() Reports a Textify error Declaration public TextifyException() | Edit this page View Source TextifyException(string) Reports a Textify error Declaration public TextifyException(string message) Parameters Type Name Description string message Message to use with reporting an error | Edit this page View Source TextifyException(string, Exception) Reports a Textify error Declaration public TextifyException(string message, Exception innerException) Parameters Type Name Description string message Message to use with reporting an error Exception innerException Inner exception to use with reporting an error"
  },
  "api/Textify.Tools.html": {
    "href": "api/Textify.Tools.html",
    "title": "Namespace Textify.Tools | Textify API - Aptivi",
    "keywords": "Namespace Textify.Tools Classes RegexTools Regular expression tools TextifyException Textify error class"
  },
  "api/Textify.Versioning.SemVer.html": {
    "href": "api/Textify.Versioning.SemVer.html",
    "title": "Class SemVer | Textify API - Aptivi",
    "keywords": "Class SemVer Class containing semantic versioning information Inheritance object SemVer Namespace: Textify.Versioning Assembly: Textify.dll Syntax public class SemVer Constructors | Edit this page View Source SemVer(int, int, int, int, string, string) Makes a new instance of this class Declaration protected SemVer(int major, int minor, int patch, int rev, string preReleaseInfo, string buildMetadata) Parameters Type Name Description int major Major version int minor Minor version int patch Patch version int rev Revision version string preReleaseInfo Info about the pre-release version string buildMetadata Info about the build metadata | Edit this page View Source SemVer(int, int, int, string, string) Makes a new instance of this class Declaration protected SemVer(int major, int minor, int patch, string preReleaseInfo, string buildMetadata) Parameters Type Name Description int major Major version int minor Minor version int patch Patch version string preReleaseInfo Info about the pre-release version string buildMetadata Info about the build metadata Properties | Edit this page View Source BuildMetadata Gets the build metadata part of the version Declaration public string BuildMetadata { get; } Property Value Type Description string | Edit this page View Source MajorVersion Gets the major version part of the version Declaration public int MajorVersion { get; } Property Value Type Description int | Edit this page View Source MinorVersion Gets the minor version part of the version Declaration public int MinorVersion { get; } Property Value Type Description int | Edit this page View Source PatchVersion Gets the patch version part of the version Declaration public int PatchVersion { get; } Property Value Type Description int | Edit this page View Source PreReleaseInfo Gets the pre-release information part of the version Declaration public string PreReleaseInfo { get; } Property Value Type Description string | Edit this page View Source RevisionVersion Gets the revision version part of the version Declaration public int RevisionVersion { get; } Property Value Type Description int | Edit this page View Source SpecialVersion Gets the special part of the version (PreReleaseInfo and BuildMetadata) Declaration public string SpecialVersion { get; } Property Value Type Description string Methods | Edit this page View Source CompareTo(SemVer) Compares between the two semantic version instances Declaration public int CompareTo(SemVer other) Parameters Type Name Description SemVer other The other semantic version instance to compare this instance with Returns Type Description int 0 if both versions are equal. 1 if this instance is newer than the other instance. -1 if this instance is older than the other instance. See Remarks for more info. Remarks Normally, what is returned according to the Returns section is normal. However, there are some special conditions. If the other instance is null, this instance is assumed to be the newer version. If the first three version parts (major, minor, patch) differ, this function returns immediately with the comparison results. However, if these equal, it goes on to comparing the special version part (pre-release info and build metadata info) and returns the following: 0 if both the special versions are empty 1 if this special version is empty -1 if the other special version is empty Otherwise, ordinal comparison is performed. | Edit this page View Source Equals(object) Declaration public override bool Equals(object o) Parameters Type Name Description object o Returns Type Description bool Overrides object.Equals(object) | Edit this page View Source Equals(SemVer) Checks to see whether all the version elements are equal to these elements in the other instance. Simply, checks to see whether this SemVer instance equals the otherSemVer instance. Declaration public bool Equals(SemVer other) Parameters Type Name Description SemVer other A SemVer instance to compare this SemVer instance with Returns Type Description bool True if both instances have equal values. False otherwise. | Edit this page View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Edit this page View Source HasRevision(string) Checks to see if the version string has the SemVer revision part or not Declaration public static bool HasRevision(string version) Parameters Type Name Description string version Version to parse Returns Type Description bool True if the version contains the revision part (the fourth part of the version), or false if otherwise. Exceptions Type Condition SemVerException | Edit this page View Source IsNewerThan(SemVer) Checks to see whether this SemVer instance contains a version newer than the otherSemVer instance. Declaration public bool IsNewerThan(SemVer other) Parameters Type Name Description SemVer other A SemVer instance to compare this SemVer instance with Returns Type Description bool True if the otherSemVer instance contains a version that is older than this instance. False otherwise. | Edit this page View Source IsOlderThan(SemVer) Checks to see whether this SemVer instance contains a version older than the otherSemVer instance. Declaration public bool IsOlderThan(SemVer other) Parameters Type Name Description SemVer other A SemVer instance to compare this SemVer instance with Returns Type Description bool True if the otherSemVer instance contains a version that is newer than this instance. False otherwise. | Edit this page View Source Parse(string) Parses the semantic version string (revision or not revision) Declaration public static SemVer Parse(string value) Parameters Type Name Description string value Value that contains a SemVer 2.0 compliant string Returns Type Description SemVer A SemVer class instance containing version information. Exceptions Type Condition SemVerException | Edit this page View Source ParseWithRev(string) Parses the semantic version string (revision only) Declaration public static SemVer ParseWithRev(string value) Parameters Type Name Description string value Value that contains a SemVer 2.0 compliant string Returns Type Description SemVer A SemVer class instance containing version information. Exceptions Type Condition SemVerException | Edit this page View Source ParseWithoutRev(string) Parses the semantic version string (no revision only) Declaration public static SemVer ParseWithoutRev(string value) Parameters Type Name Description string value Value that contains a SemVer 2.0 compliant string Returns Type Description SemVer A SemVer class instance containing version information. Exceptions Type Condition SemVerException | Edit this page View Source ToString() Converts the version instance to the string representation (a SemVer 2.0 compliant string) Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Operators | Edit this page View Source operator ==(SemVer, SemVer) Declaration public static bool operator ==(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool | Edit this page View Source operator >(SemVer, SemVer) Declaration public static bool operator >(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool | Edit this page View Source operator >=(SemVer, SemVer) Declaration public static bool operator >=(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool | Edit this page View Source operator !=(SemVer, SemVer) Declaration public static bool operator !=(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool | Edit this page View Source operator <(SemVer, SemVer) Declaration public static bool operator <(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool | Edit this page View Source operator <=(SemVer, SemVer) Declaration public static bool operator <=(SemVer a, SemVer b) Parameters Type Name Description SemVer a SemVer b Returns Type Description bool"
  },
  "api/Textify.Versioning.SemVerException.html": {
    "href": "api/Textify.Versioning.SemVerException.html",
    "title": "Class SemVerException | Textify API - Aptivi",
    "keywords": "Class SemVerException Exception for semantic versioning Inheritance object Exception SemVerException Namespace: Textify.Versioning Assembly: Textify.dll Syntax public class SemVerException : Exception Constructors | Edit this page View Source SemVerException() Initializes a new instance of SemVerException Declaration public SemVerException() | Edit this page View Source SemVerException(string) Initializes a new instance of SemVerException Declaration public SemVerException(string message) Parameters Type Name Description string message | Edit this page View Source SemVerException(string, Exception) Initializes a new instance of SemVerException Declaration public SemVerException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/Textify.Versioning.html": {
    "href": "api/Textify.Versioning.html",
    "title": "Namespace Textify.Versioning | Textify API - Aptivi",
    "keywords": "Namespace Textify.Versioning Classes SemVer Class containing semantic versioning information SemVerException Exception for semantic versioning"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Textify API - Aptivi",
    "keywords": "What is Textify? Textify is a library that serves as a collection of text tools. It allows you to manipulate with text, all in one library. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Textify, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022 Aptivi. All rights reserved."
  }
}